{{- if (include "kubernetes.enabled" $) -}}
  {{- $kubernetes := $.Values.kubernetes -}}
  {{- if and $kubernetes.konnectivityServer.enabled (eq $kubernetes.konnectivityServer.mode "HTTPConnect") }}
    {{- $fullName := include "kubernetes.fullname" . -}}
    {{- $component_name := "konnectivity" -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $fullName }}-konnectivity-server"
  labels: {{- include "kubernetes.labels" $ | nindent 4 }}
    {{ include "pkg.common.labels.component" $ }}: {{ $component_name }}
    {{- with (include "pkg.components.labels" (dict "labels" $kubernetes.konnectivityServer.labels "ctx" $)) }}
      {{-  . | nindent 4 }}
    {{- end }}
    {{- with (include "pkg.components.annotations" (dict "annotations" $kubernetes.konnectivityServer.annotations "ctx" $)) }}
  annotations:
      {{-  . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ $kubernetes.konnectivityServer.replicaCount }}
  {{- with $kubernetes.konnectivityServer.strategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "kubernetes.selectorLabels" $ | nindent 6 }}
      {{ include "pkg.common.labels.component" $ }}: {{ $component_name }}
  template:
    metadata:
      labels: {{- include "kubernetes.labels" $ | nindent 8 }}
        {{- include "pkg.components.pod_labels" (dict "labels" $kubernetes.konnectivityServer.podLabels "ctx" $) | nindent 8 }}
        {{ include "pkg.common.labels.component" $ }}: {{ $component_name }}
      annotations:
        {{- include "pkg.components.pod_annotations" (dict "annotations" $kubernetes.konnectivityServer.podAnnotations "ctx" $) | nindent 8 }}
    spec:
      {{- with (include "pkg.components.nodeselector" (dict "nodeselector" $kubernetes.konnectivityServer.nodeSelector "ctx" $)) }}
      nodeSelector: {{- . | nindent 8 }}
      {{- end }}
      {{- with (include "pkg.components.tolerations" (dict "tolerations" $kubernetes.konnectivityServer.tolerations "ctx" $)) }}
      tolerations:  {{- . | nindent 8 }}
      {{- end }}
      {{- with (include "pkg.components.priorityClass" (dict "pc" $kubernetes.konnectivityServer.priorityClassName "ctx" $)) }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with (include "pkg.components.topologySpreadConstraints" (dict "tsc" $kubernetes.konnectivityServer.topologySpreadConstraints "ctx" $)) }}
      topologySpreadConstraints: {{ . | nindent 8 }}
      {{- end }}
      affinity:
      {{- with (include "pkg.components.affinity" (dict "affinity" $kubernetes.konnectivityServer.affinity "ctx" $)) }}
        {{- . | nindent 8 }}
      {{- end }}
      {{- if eq $kubernetes.konnectivityServer.podAntiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "{{ $kubernetes.konnectivityServer.podAntiAffinityTopologyKey }}"
              labelSelector:
                matchLabels:
                  app: {{ $fullName }}-konnectivity-server
      {{- else if eq $kubernetes.konnectivityServer.podAntiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: "{{ $kubernetes.konnectivityServer.podAntiAffinityTopologyKey }}"
                labelSelector:
                  matchLabels:
                    app: {{ $fullName }}-konnectivity-server
      {{- end }}
      imagePullSecrets: {{ include "pkg.images.registry.pullsecrets" $ | nindent 8 }}
        {{- with $kubernetes.konnectivityServer.image.pullSecrets }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      automountServiceAccountToken: false
      containers:
      {{ template "kubernetes.konnectivityServer.containers" . }}
      {{- with (include "pkg.components.podSecurityContext" (dict "psc" $kubernetes.konnectivityServer.podSecurityContext "ctx" $)) }}
      securityContext: {{ . | nindent 8 }}
      {{- end }}
      {{ template "kubernetes.konnectivityServer.volumes" . }}
  {{- end }}
{{- end }}
